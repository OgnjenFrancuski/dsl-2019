// FILE ================================================================================================================

File:
    data_expressions  *= Data              // expressions for loading data
    model_expressions *= Expression        // expressions for defining models
    run_expressions *= RunExpression       // run configuration for training / testing
;


Expression:
    Model
;


RunExpression:
    Train | Test
;


// DATA RULES ==========================================================================================================

Data:
    'Data' name=ID
    '{'
        'path' '=' path=STRING ';'
        (
            ('test_size' '='        test_size=FLOAT                     ';')? |
            ('validation_size' '='  validation_size=FLOAT               ';')? |
            ('missing_values' '='   missing_values=MissingValuesMethod  ';')? |
            ('normalization' '='    normalization=NormalizationMethod   ';')? |
            ('outlier' '='          outlier=OutlierRemovalMethod        ';')?
        )#
    '}'
;


// MODEL RULES =========================================================================================================

Model:
  'Model' type=ID name=ID
  '{'
        params *= Param
  '}'
;


AnonymousModel:
    type=ID
    '{'
        params *= Param
    '}'
;


// TEST AND TRAIN RULES ================================================================================================


Train:
    'Train'
    '{'
        (
            // required attributes for training

            ('x' '='        train_x=ID        ';') |
            ('y' '='        train_y=ID        ';') |
            ('models' '='   models=List ';') |
            ('score' '='    score=Score ';') |

            // optional attributes for training

            ('verbose' '='      verbose=INT   ';')? |
            ('seed' '='         seed=INT      ';')? |
            ('cross_validation'
             '{'
                 (
                    ('folds' '=' folds=INT ';') |
                    ('params' '{' params *= Param '}' ';')

                 )#
             '}' ';'
            )?
        )#
    '}'
;


Test:
    'Test'
    '{'
        (
            ('x' '='        test_x=ID   ';') |
            ('y' '='        test_y=ID   ';') |
            ('models' '='   models=List ';')
        )#
    '}'
;


// UTILITY RULES =======================================================================================================

Param:
  name=ID '=' Value ';'
;


Value:
    Range | List | STRING | FLOAT | INT | ID
;


Range:
    'range(' (start=INT ',')? stop=INT ')'
    | 'range(' start=INT ',' stop=INT ',' step=INT ')'
;


List:
    '[' num*=Value[','] ']'
;


Comment:
  /\/\/.*$/
;


// CONSTANTS RULES =====================================================================================================

MissingValuesMethod:
    'MEAN' | 'MEDIAN'
;


NormalizationMethod:
    'Z_SCORE' | 'MINMAX'
;


OutlierRemovalMethod:
    'ISF' | 'LOF'
;


Score:
    'ACCURACY' | 'F1-MICRO' | 'F1-MACRO'
;